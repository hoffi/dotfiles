# if-shell 'test "$(uname)" = "Darwin"' 'set-option -g default-command "reattach-to-user-namespace -l fish"'
set -g default-terminal "screen-256color-bce"
set-option -ga terminal-overrides ",xterm-256color:Tc,screen-256color:Tc"
set -g focus-events on

unbind-key C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Load Config for specific tmux version
if-shell 'tmux -V | egrep "tmux (2|master)"' 'source ~/.dotfiles/tmux.2.1.conf' 'source ~/.dotfiles/tmux.1.9.conf'

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

set-option -g base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# No escape time for vi mode
set -sg escape-time 1
set -g repeat-time 1000

# Act like Vim
set-window-option -g mode-keys vi

# Copy like vim
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
set-option -g set-clipboard on

# Bigger history
set -g history-limit 5000

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# color scheme
set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-format '[ #I ]'
set-window-option -g window-status-format ' #I '
set-window-option -g window-status-attr dim

# set refresh interval for status bar
set -g status-interval 10

# center the status bar
set -g status-justify left

# setup status bar content
set -g status-left "â˜µ  "
set-option -g status-right '#[fg=colour8]#S | %a %d %b %H:%M'
set-option -g status-right-length 80

# color status bar
set -g status-bg default
set -g status-fg default
set -g message-bg colour1
set -g message-fg colour3

# highlight current window
set-window-option -g window-status-current-bg black
set-window-option -g window-status-current-fg colour2
set-window-option -g window-status-bg black
set-window-option -g window-status-fg default
